Introduction

The FoodChatBot project is a web-based platform for a fast food
restaurant called "Puppy Love Cafe." It provides a user-friendly interface
for customers to view the restaurant's menu, place orders, and track their orders. T
he project combines web development, database management, and chatbot
integration to create a seamless experience for both restaurant staff and customers.

Features

Display the restaurant's menu with detailed descriptions and prices.
Allow users to place orders by selecting items from the menu.
Provide real-time tracking of orders in progress.
Integrated chatbot for customer assistance and order inquiries.
Database management for storing and retrieving order information.
Technologies

The FoodChatBot project is built using the following technologies:

Python: Used for backend development and database management.
MySQL: The database system for storing order and menu information.
FastAPI: A modern web framework for building the web application.
HTML/CSS: Frontend development for the restaurant website.
JavaScript: Implementing client-side interactivity and chatbot integration.
Dialogflow: An AI-powered chatbot platform for customer interactions.
MySQL Connector/Python: A Python driver for connecting to the MySQL database.
Uvicorn: An ASGI server for hosting the FastAPI application.


Getting Started

================Prerequisites===========================
Before running the FoodChatBot project, ensure you have the following
prerequisites installed:

- Python (version >= 3.7)
- MySQL database server
- MySQL Connector/Python (mysql-connector-python library)
- FastAPI
- Uvicorn
- Dialogflow account and chatbot agent


====================Installation======================
1. clone the project repository:

git clone https://github.com/morganizzzm/foodchatbot.git
cd foodchatbot

2. Create a virtual environment (recommended):

python -m venv venv
source venv/bin/activate

3. Install project dependencies:

pip install -r requirements.txt

4. Configure your database connection in config.py:

DATABASE_CONFIG = {
    'host': 'localhost',
    'user': 'your_db_user',
    'password': 'your_db_password',
    'database': 'puppy_love_cafe',
}

===============USAGE===============================

To run the FoodChatBot project, follow these steps:

1. Start the FastAPI application using Uvicorn:
uvicorn main:app --host 0.0.0.0 --port 8000 --reload

2. Access the restaurant website by opening a web browser and navigating to
http://localhost:8000.

3. Browse the menu, place orders, and track order status.

4. The integrated chatbot is available for customer inquiries and assistance.


==============ChatBot Integration============================

The project integrates Dialogflow as the chatbot platform. To integrate your own chatbot:

1. Create a Dialogflow account and set up an agent.
2. Replace the chatbot iframe source in the HTML file with your Dialogflow agent's URL.

<iframe width="350" height="430" allow="microphone;" src="YOUR_DIALOGFLOW_AGENT_URL"></iframe>

==============Database Setup===================================

The project uses MySQL as the database system. You can set up the
database by executing the SQL scripts provided in the database folder.
Make sure to update the database configuration in config.py.

=================Project Structure===============================

The project structure is organized as follows:

main.py: FastAPI application for the restaurant website.
db_helper.py: Database helper functions for interacting with MySQL.
config.py: Configuration file for database and other settings.
templates: HTML templates for web pages.
static: Static assets (CSS, JavaScript) for the website.
database: SQL scripts for database schema and initial data.
README.md: Project documentation.
